# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - QT_QPA_PLATFORM=offscreen
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - apt update
  - apt install -y xvfb # Sets up a headless display
  - xvfb :99 & export DISPLAY=:99
  - sleep 3

stages:
  - Static Analysis
  - Test
  - Deploy

test:
  stage: Test
  script:
    - pip install -e .
    - pip install -r requirements_dev.txt
    - apt install python3-pyqt5 -y  # install here manually due to issues
    - xvfb-run py.test -sv --cov=quantify --cov-report xml --cov-report html --cov-report term --cov-config=.coveragerc --color=yes


  artifacts:
    paths:
      - htmlcov
      - coverage.xml
    reports:
      cobertura: coverage.xml

    when: always

test-3.8:
  extends: "test"
  image: "python:3.8"


flake8:
  image: python:latest
  stage: Static Analysis
  allow_failure: true
  script:
    - pip install -r requirements_dev.txt
    - flake8 quantify tests --format=html --htmldir=flake-report

  artifacts:
    paths:
      - flake-report
    when: on_failure

pylint:
  image: python:latest
  stage: Static Analysis
  allow_failure: true
  script:
    - pip install -r requirements_dev.txt
    - pylint quantify --rcfile=.pylintrc | pylint-json2html -o pylint.html

  artifacts:
    paths:
      - pylint.html
    when: on_failure



run:
  stage: Test
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

pages:
  stage: Deploy
  script:
    - apt install -y pandoc # required for nbsphinx plugin
    - pip install sphinx sphinx-rtd-theme
    - cd docs ; make html
    - mv _build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - develop
